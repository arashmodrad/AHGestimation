[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Mike Johnson Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/data-filtering.html","id":"nwis-filtering-functions","dir":"Articles","previous_headings":"","what":"nwis Filtering Functions","title":"Data Preprocessing","text":"Often nwis comes long records steam observation noisy. Noise can come changes river , changes measurement methods, even measurement locations. FHG algorithm implemented package can deal noise hybrid OLS --> NLS --> NSGA2 --> combo fitting method, also possible, even advisable, filter nwis prior fitting. illustrate packaged methods. assumption filtering methods reduces nwisset less 10 observations, warning emited input nwis returned.","code":""},{"path":"/articles/data-filtering.html","id":"median-absolute-deviation-mad","dir":"Articles","previous_headings":"nwis Filtering Functions","what":"1. Median Absolute Deviation (mad)","title":"Data Preprocessing","text":"iterative outlier detection procedure can run iteritivly residuals linear regressions relationship following procedure described HyG nwisset. Values log-transformed TW, V, Y residuals falling outside specified median absolute deviation (MAD) excluded pass outliers left. approach can implemented using mad_filter:","code":"mad_nwis = mad_filter(nwis, envelope = 3)"},{"path":"/articles/data-filtering.html","id":"temporal","dir":"Articles","previous_headings":"nwis Filtering Functions","what":"2. Temporal","title":"Data Preprocessing","text":"Rivers change time. minimize effects long-term channel evolution can advantageous limit records recent years. approach can implemented using date_filter. Users can specify number years keep (reference recent observation) whether maximum flow value kept regradless taken.","code":"date_data = date_filter(nwis, years = 5, keep_max = TRUE)"},{"path":"/articles/data-filtering.html","id":"q-va-assumption","dir":"Articles","previous_headings":"nwis Filtering Functions","what":"3. Q = vA Assumption","title":"Data Preprocessing","text":"One basic assumptions AHG relation Q = vA v velocity, cross sectional area, Q stream flow. qva_filter can used remove measurements grossly violate assumption. Within code, assumed product Y TW allowance can specific determines amount allows deviation equality. default allowance .05.","code":"qva_nwis = qva_filter(nwis, allowance = .05)"},{"path":"/articles/data-filtering.html","id":"nls-prediciton","dir":"Articles","previous_headings":"nwis Filtering Functions","what":"4. NLS prediciton","title":"Data Preprocessing","text":"development package became evident NLS approach, using OLS estimates seeds, provided best relation relation fit. approach fits NLS equations provided relationship. fit used predict [V,TW,Y] given Q’s. actual value outside specified allowance (default = +/- 50%) removed.","code":"nls_nwis = nls_filter(nwis, allowance = .5)"},{"path":"/articles/data-filtering.html","id":"chaining-commands","dir":"Articles","previous_headings":"","what":"Chaining Commands","title":"Data Preprocessing","text":"Multiple filtering approaches can chained together isolate representative nwisset complete archive. example, reduce complete nwisset 10 year record respects Q=vA assumption nwis outside 3 MAD relation:","code":"xf = nwis %>%    # Keep the most recent 10 year   date_filter(year = 10, keep_max = TRUE) %>%    # Keep nwis within 3 Median absolute deviations (log residuals)   mad_filter() %>%    # Keep nwis that respects the Q = vA criteria w/in allowance   qva_filter()"},{"path":"/articles/data-filtering.html","id":"examples","dir":"Articles","previous_headings":"","what":"Example(s)","title":"Data Preprocessing","text":"","code":"# Best attempt to mimic the HyG nwisset hf_df = nwis %>%    date_filter(5, keep_max = TRUE) %>%    qva_filter(allowance = .05) %>%    mad_filter(envelope = 3)   # NLS basec filtering nls_df = nwis %>%    date_filter(10, keep_max = TRUE) %>%    nls_filter(allowance = .5)    x1 = ahg_estimate(df = nwis) x2 = ahg_estimate(df = hf_df) x3 = ahg_estimate(df = nls_df)"},{"path":"/articles/data-filtering.html","id":"significance","dir":"Articles","previous_headings":"","what":"Significance","title":"Data Preprocessing","text":"relationship supplied log transformed variables computed. p-value less supplied p-value error message emitted can assumed statistical relationship exists Q-{TW,V,Y}.","code":"s = significance_check(nwis)"},{"path":"/articles/hydraulics.html","id":"hydraulic-estimation","dir":"Articles","previous_headings":"","what":"Hydraulic Estimation","title":"Hydraulic Data Generation","text":"primary application AHG relations hydraulic simulation approximation. AHG relationships useful translating one hydraulic variable estimate another, can used parameterize shape, roughness, behavior channel routing applications applications (e.g. see Heldmeyer 2019)","code":""},{"path":"/articles/hydraulics.html","id":"example-data","dir":"Articles","previous_headings":"Hydraulic Estimation","what":"Example data","title":"Hydraulic Data Generation","text":"Staring data examples, can retain last 10 year data apply NLS filter (see section data filtering )","code":"data = nwis %>%    date_filter(10, keep_max = TRUE) %>%    nls_filter(allowance = .5)  glimpse(data) #> Rows: 80 #> Columns: 6 #> $ siteID <chr> \"01096500\", \"01096500\", \"01096500\", \"01096500\", \"01096500\", \"01… #> $ date   <date> 1987-04-07, 2009-06-10, 2010-03-25, 2010-04-06, 2010-09-16, 20… #> $ Q      <dbl> 317.148686, 4.983765, 122.611948, 67.110927, 2.146417, 124.0277… #> $ Y      <dbl> 3.7651765, 0.3386667, 2.2812075, 1.4431347, 0.3609009, 2.281325… #> $ V      <dbl> 1.624584, 0.445008, 1.106424, 1.039368, 0.283464, 1.094232, 1.0… #> $ TW     <dbl> 51.81600, 32.91840, 48.46320, 44.80560, 21.03120, 49.68240, 49.…"},{"path":"/articles/hydraulics.html","id":"compute-roughness","dir":"Articles","previous_headings":"Hydraulic Estimation","what":"Compute Roughness","title":"Hydraulic Data Generation","text":"Roughness defines friction exerted stream bed water flowing . One way estimate roughness solve Manning’s equation: \\[ n = \\frac{R^{2/3}S^{1/2}}{V} \\] V velocity, R hydraulic radius S longitudinal slope. can use smoothed reach-scale longitudinal slopes NHDPlusv2 extracting value gage used combining NLDI get_vaa() capabilities nhdplusTools. Following assumptions made HyG Dataset use median depth (Y) approximation R, median Velocity (V) field measurement record. Thus, report roughness approximates historical median measured flow gage.","code":"library(nhdplusTools)  q = get_nldi_feature(list(\"featureSource\" = \"nwissite\",                            featureID = \"USGS-01096500\"))  att = get_vaa(\"slope\") %>%    filter(comid == q$comid)  (n = compute_n(data, S = att$slope)) #> [1] 0.1451996"},{"path":"/articles/hydraulics.html","id":"compute-r-d-r-and-p","dir":"Articles","previous_headings":"Hydraulic Estimation","what":"Compute r, d, R and p","title":"Hydraulic Data Generation","text":"Dingman (2018) presented analytic derivations AHG parameters AHG coefficients related cross-section hydraulics geometry. Specifically 4 variables called :","code":""},{"path":"/articles/hydraulics.html","id":"r","dir":"Articles","previous_headings":"Hydraulic Estimation > Compute r, d, R and p","what":"r","title":"Hydraulic Data Generation","text":"exponent r reflects cross-section shape triangle represented r = 1, ‘Lane Type B stable channel’ (Henderson, 1966) r ≈1.75, parabola r = 2. r →∞, channel becomes rectangular (Fig. 1). value r can computed : \\[ r = f/b \\] Figure 1","code":""},{"path":"/articles/hydraulics.html","id":"p-q-k","dir":"Articles","previous_headings":"Hydraulic Estimation > Compute r, d, R and p","what":"p, q, k","title":"Hydraulic Data Generation","text":"exponent p (along q) exist Chézy Manning uniform-flow equations. Chézy, p = 1/2 Manning’s, p = 2/3 Chézy Manning q = 1/2. Since neither equation generally dimensionally correct require unit adjustments. several studies indicated p q different values assumed Chézy/Manning relations [e.g. Riggs (1976), Dingman Sharma (1997), Bjerklie et al. (2005), Lopez et al. (2007), Ferguson (2007), Ferguson (2010)]. p can computed : \\[ p = m/f \\] ** general determination κ p channel characteristics (especially slope boundary roughness) central problem open-channel hydraulics resisted simple solution**. practice, coefficient κ exponent p can determined regression ln(V) ln(Y)","code":"compute_ahg(Q = data$Y,  P = data$V, type = \"kp\")[1,] %>%    rename(k = coef, p = exp) #>   type        p         k nrmse   pb method #> 1   kp 0.611539 0.7561858  9.06 0.67    nls"},{"path":"/articles/hydraulics.html","id":"d-r","dir":"Articles","previous_headings":"Hydraulic Estimation > Compute r, d, R and p","what":"d, R","title":"Hydraulic Data Generation","text":"dand R derived parameters critical Dingman’s analytical expressions (Dingman 2018). based r p \\[ R ≡ (1 + r)/r \\] \\[ d ≡ 1 + r + rp \\] estimate suite parameters, provide compute_hydraulic_params","code":"fit = ahg_estimate(data)[1,] fit = compute_hydraulic_params(fit)  t(fit) #>            1 #> r  2.7493181 #> p  0.6103574 #> d  5.4273846 #> R  1.3637266 #> bd 0.1842508 #> fd 0.5065641 #> md 0.3091851"},{"path":"/articles/hydraulics.html","id":"implications","dir":"Articles","previous_headings":"Hydraulic Estimation","what":"Implications","title":"Hydraulic Data Generation","text":"r determined channel cross-section geometry p cross-section hydraulic relation, can write AHG relations terms channel hydraulics geometry: \\[ W = BFW^{r+(r*p)} * (BFD/ R)^{-(1+p) / d} * Q^{1/d} \\] \\[ Y = BFW^{r/d} * (BFD/ R)^{1 / d} * κ^{-r/d} * Q^{1/d} \\] \\[ V = BFW^{-(r*p)/d} * (BFD/ R)^{p / d} * κ^{(1+r)/d} * Q^{(-r*p)/d} \\]","code":""},{"path":"/articles/hydraulics.html","id":"generate-cross-sections","dir":"Articles","previous_headings":"Hydraulic Estimation","what":"Generate Cross sections","title":"Hydraulic Data Generation","text":"","code":"cs = cross_section(r = fit$r,                     TW = max(data$TW),                     Ymax = max(data$Y))  head(cs) #>   ind        x        Y         A #> 1   1 0.000000 3.565667 131.89525 #> 2   2 1.040816 3.187122 113.01118 #> 3   3 2.081633 2.835189  96.18829 #> 4   4 3.122449 2.509030  81.27753 #> 5   5 4.163265 2.207803  68.13466 #> 6   6 5.204082 1.930653  56.62032"},{"path":"/articles/improved-ahg.html","id":"increasing-ahg-skill","dir":"Articles","previous_headings":"","what":"Increasing AHG skill:","title":"Improving AHG Estimates","text":"last section saw traditional OLS based fit sample data provided solution met continuity, , large amount error. section explore alternative methods see","code":""},{"path":"/articles/improved-ahg.html","id":"curve-fitting-approaches","dir":"Articles","previous_headings":"","what":"Curve Fitting Approaches","title":"Improving AHG Estimates","text":"fitting nonlinear curve set data, options : (1) linearize relationship transforming data; (2) fit polynomial spline data; (3) fit nonlinear function. emphasis interoperable power law relations, linear (1) nonlinear (3) approaches appropriate. Nonlinear Least Square (NLS) regression provides flexible curve fitting iterative optimization. NLS approaches require specified starting value unknown parameter ensure solver converges global rather local minimum. suboptimal starting values provided, NLS solvers may converge local minimum, , .","code":""},{"path":"/articles/improved-ahg.html","id":"ols","dir":"Articles","previous_headings":"Curve Fitting Approaches","what":"OLS","title":"Improving AHG Estimates","text":"","code":"ols = function(X, Y, name = NA){   fit = lm(log(Y) ~ log(X))   data.frame(coef = exp(fit$coefficients[1]),              exp  = fit$coefficients[2],              name = name,              row.names = NULL) }  (ols_fit = bind_rows(         ols(data$Q, data$Y, \"Y\"),         ols(data$Q, data$TW, \"TW\"),         ols(data$Q, data$V, \"V\"))%>%      mutate(method = \"ols\")) #>         coef       exp name method #> 1  0.2004177 0.4797009    Y    ols #> 2 23.0100349 0.1104173   TW    ols #> 3  0.2155711 0.4093273    V    ols  sum(ols_fit$exp) #> [1] 0.9994455 prod(ols_fit$coef) #> [1] 0.9941314  olsP = data %>%    mutate(Yp  = ols_fit$coef[1] * (Q ^ ols_fit$exp[1]),          TWp = ols_fit$coef[2] * (Q ^ ols_fit$exp[2]),          Vp  = ols_fit$coef[3] * (Q ^ ols_fit$exp[3]))           ols_e = data.frame(   Ye  = nrmse(olsP$Y, olsP$Yp),   TWe = nrmse(olsP$TW, olsP$TWp),   Ve  = nrmse(olsP$V, olsP$Vp)) %>%    mutate(tot_error = Ye + TWe + Ve, type = \"OLS\") #> Warning in geom_col(data = tidyr::pivot_longer(ols_e, -type), aes(x = name, : #> Ignoring unknown parameters: `stat`"},{"path":"/articles/improved-ahg.html","id":"nls","dir":"Articles","previous_headings":"Curve Fitting Approaches","what":"NLS","title":"Improving AHG Estimates","text":"","code":"nls = function(X, Y, coef, exp, name = NA){   s <-  summary(suppressWarnings({     stats::nls(Y ~ alpha * X ^ x,         start = list(alpha = coef, x = exp),          trace = FALSE,         control = nls.control(maxiter = 50, tol=1e-09,  warnOnly=TRUE))   }))      data.frame(coef = s$coefficients[1,1],              exp  = s$coefficients[2,1],              name = name,              row.names = NULL) }  (nls_fit = bind_rows(         nls(X = data$Q, Y = data$Y,  coef = ols_fit$coef[1], exp = ols_fit$exp[1], \"Y\"),         nls(X = data$Q, Y = data$TW, coef = ols_fit$coef[2], exp = ols_fit$exp[2], \"TW\"),         nls(X = data$Q, Y = data$V,  coef = ols_fit$coef[3], exp = ols_fit$exp[3], \"V\")) %>%      mutate(method = \"nls\")) #>         coef       exp name method #> 1  0.1871979 0.5185496    Y    nls #> 2 23.3057155 0.1111103   TW    nls #> 3  0.2886315 0.3273010    V    nls  sum(nls_fit$exp) #> [1] 0.956961 prod(nls_fit$coef) #> [1] 1.259236  nlsP = data %>%    mutate(Yp  = nls_fit$coef[1] * (Q ^ nls_fit$exp[1]),          TWp = nls_fit$coef[2] * (Q ^ nls_fit$exp[2]),          Vp  = nls_fit$coef[3] * (Q ^ nls_fit$exp[3]),          method = \"nls\")           nls_e = data.frame(   Ye  = nrmse(nlsP$Y, nlsP$Yp),   TWe = nrmse(nlsP$TW, nlsP$TWp),   Ve  = nrmse(nlsP$V, nlsP$Vp) ) %>%    mutate(tot_error = Ye + TWe + Ve, type = \"NLS\") #> Warning in geom_col(data = tidyr::pivot_longer(e, -type), aes(x = name, : #> Ignoring unknown parameters: `stat`"},{"path":"/articles/improved-ahg.html","id":"nsga-ii","dir":"Articles","previous_headings":"","what":"NSGA-II","title":"Improving AHG Estimates","text":"","code":"allowance = 0.05  # x assumed to be ordered as: k, m, a, b, c, f objective_function <- function(x) {       v = nrmse(x[1]*data$Q^x[2], data$V)        t = nrmse(x[3]*data$Q^x[4], data$TW)        d = nrmse(x[5]*data$Q^x[6], data$Y)        return(c(v,t,d)) }  constraint = function(x) {     return(c((1 + allowance) - (x[1] * x[3] * x[5]),              (x[1] * x[3] * x[5]) - (1 - allowance),              (1 + allowance) - (x[2] + x[4] + x[6]),              (x[2] + x[4] + x[6]) - (1 - allowance))) } set.seed(10291991)  res = nsga2(       objective_function,       constraints   = constraint,       # 6 inputs, 3 outputs, 4 constraints       idim = 6, odim = 3, cdim = 4,       # Bounds determined from literature       lower.bounds  = c(0, 0, 0, 0, 0, 0),       upper.bounds  = c(3.5, 1, 642, 1, 20, 1),       # Defaults we've chosen       generations   = 200,       popsize       = 32,       cprob = .5,       mprob = .1) vals = res$value[res$pareto.optimal, ] vals = vals[!duplicated(vals), ]  par  = res$par[res$pareto.optimal, ] par  = par[!duplicated(par), ]  ahg = par[which.min(rowSums(vals)),]  nsga_fit = data.frame(coef = ahg[c(1,3,5)], exp = ahg[c(2,4,6)], name = c(\"V\", \"TW\", \"Y\"), method = \"nsga2\")  nsgs_e = data.frame(   Ve = nrmse((ahg[1] * data$Q ^ ahg[2]), data$V) ,   TWe = nrmse((ahg[3] * data$Q ^ ahg[4]), data$TW),    Ye = nrmse((ahg[5] * data$Q ^ ahg[6]), data$Y),   type = \"nsga2\") %>%    mutate(tot_error = Ve + TWe + Ye) #> Warning in geom_col(data = tidyr::pivot_longer(e, -type), aes(x = name, : #> Ignoring unknown parameters: `stat`"},{"path":"/articles/improved-ahg.html","id":"combination-approach","dir":"Articles","previous_headings":"","what":"Combination Approach","title":"Improving AHG Estimates","text":"","code":"d = bind_rows(ols_fit, nls_fit, nsga_fit) r = split(d, f = d$name)    fit =  function(g, ind, V, TW, Y, Q, allowance = .05) {     x = g[ind,]     g$V_error[ind] =  nrmse(x$V_coef*(Q^x$V_exp), V)     g$TW_error[ind] = nrmse(x$TW_coef*(Q^x$TW_exp), TW)     g$Y_error[ind] =  nrmse(x$Y_coef*(Q^x$Y_exp), Y)      c1 = round(g$V_coef[ind] * g$Y_coef[ind] * g$TW_coef[ind], 3)     c2 = round(g$V_exp[ind] + g$Y_exp[ind] + g$TW_exp[ind], 3)     g$viable[ind] =  (between(c1, 1-allowance, 1+allowance) +  between(c2, 1-allowance, 1+allowance)) == 2     g }      names = c(\"V\", \"TW\", \"Y\")  g = rep(list(c(\"ols\", \"nls\", \"nsga2\")), 3) %>%      expand.grid() %>%      setNames(paste0(names, \"_method\")) %>%      mutate(viable = NA, tot_error = NA) %>%      bind_cols(setNames(data.frame(matrix(NA, ncol = 9, nrow =27)),                            c(paste0(names, \"_error\"), paste0(names, \"_coef\"), paste0(names, \"_exp\"))))     for(t in 1:3){     x = g[[paste0(names[t], \"_method\")]]     ind = match(x, r[[names[t]]]$method)          g[[paste0(names[t], '_exp')]] = r[[names[t]]]$exp[ind]     g[[paste0(names[t], '_coef')]] = r[[names[t]]]$coef[ind] }  for(i in 1:nrow(g)){ g = fit(g, i, data$V, data$TW, data$Y, data$Q)}  g$tot_error = rowSums(g[, grepl(\"error\", names(g))], na.rm = TRUE)  combo = filter(g, viable == TRUE) %>%        slice_min(tot_error) %>%        mutate(condition = \"bestValid\")      ols = filter(g, Y_method == \"ols\", TW_method == \"ols\", V_method == \"ols\") %>%        mutate(condition = \"ols\")      nls = filter(g, Y_method == \"nls\", TW_method == \"nls\", V_method == \"nls\") %>%        mutate(condition = \"nls\")    nsga = filter(g, Y_method == \"nsga2\", TW_method == \"nsga2\", V_method == \"nsga2\") %>%          mutate(condition = \"nsga2\")  summary = bind_rows(combo, ols, nls, nsga) %>%             arrange(!viable, tot_error) #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `across(where(is.numeric), round, digits = 2)`. #> Caused by warning: #> ! The `...` argument of `across()` is deprecated as of dplyr 1.1.0. #> Supply arguments directly to `.fns` through an anonymous function instead. #>  #>   # Previously #>   across(a:b, mean, na.rm = TRUE) #>  #>   # Now #>   across(a:b, \\(x) mean(x, na.rm = TRUE))"},{"path":"/articles/improved-ahg.html","id":"packaged-functionality","dir":"Articles","previous_headings":"","what":"Packaged Functionality","title":"Improving AHG Estimates","text":"workflow follows diagram:  can executed like : NOTE Single relationships can also fit like :","code":"ahg = ahg_estimate(data) ahg_estimate(select(data, Q, Y)) #>   type       exp      coef nrmse    pb method #> 1    Y 0.5185496 0.1871979  8.35 -0.18    nls #> 2    Y 0.4797009 0.2004177  8.58 -6.19    ols"},{"path":"/articles/optimize-nsga2.html","id":"solver","dir":"Articles","previous_headings":"","what":"Solver","title":"Fine Tuning NSGA-2","text":"use NSGA-2 prior experiments showed solving AHG relationship, mass conserving way, often multi-criterion problem Pareto front solutions.","code":""},{"path":"/articles/optimize-nsga2.html","id":"defining-bounds","dir":"Articles","previous_headings":"","what":"Defining bounds","title":"Fine Tuning NSGA-2","text":"NSGA solver requests (doesn’t require) set lower upper limits search. Setting helps limit search space, therefore returns skilled solution quickly (). method setting bounds follows: Fit NLS individual relation prior work showed every case NLS (seeded OLS solutions) provides best estimation individual relationship often fails meet continuity. Scale set factor limits exponent coefficients range {(1/scale) * nls; scale * nls}  default scale 1.5, left NULL respective parameters limits set maximums (+10%) found Asfari 2018.","code":""},{"path":"/articles/optimize-nsga2.html","id":"parameterizing-the-model","dir":"Articles","previous_headings":"","what":"Parameterizing the model","title":"Fine Tuning NSGA-2","text":"Fine tuning evolutionary algorithm balancing act time converge accuracy. NSGA-2 model 4 parameters can tuned: Population Size: many solutions created generation Generation: many generations created Cross probability: Determines likelihood crossover occur two parent solutions. Mutation probability: Determines likelihood individual undergo mutation process","code":""},{"path":"/articles/optimize-nsga2.html","id":"population-generation","dir":"Articles","previous_headings":"","what":"Population & Generation","title":"Fine Tuning NSGA-2","text":"First try identify optimal population generation size problem holding cross mutation probabilities constant middle value total grid. , build text matrix generation population sizes, use default mprob cprob (seed 1). plot table show solutions balance % gain “best” solution time solve. effective Pareto front solutions colored labeled equally valid solutions depending desired goal (maximum speed, minimal error, balance)","code":"seed  = 1 mprob = c(.2) cprob = c(.7) gen   = c(16, 24, 32, 48, 96, 144, 192) pop   = c(100, 200, 300, 500, 700, 1000) #> `summarise()` has grouped output by 'gen'. You can override using the `.groups` #> argument. #> Warning: Removed 7 rows containing missing values #> (`geom_label_repel()`)."},{"path":"/articles/optimize-nsga2.html","id":"cross-over-and-mutation-probability","dir":"Articles","previous_headings":"","what":"Cross over and Mutation Probability","title":"Fine Tuning NSGA-2","text":"Next, using idealized generation population size, can turn two probabilistic inputs: Cross Mutation , tested 15 combinations (3 probabilities, 5 gen/pop combinations) 25 gauged locations. plot () shows mean error combination across 25 locations mean time converge. Plot (B) shows mean variance grouping mean time converge.","code":"# high crossover, low mutation c(.8, .05)  # high-ish crossover, low-ish mutation (nearly mco default) c(.6, .2)  # moderate crossover, moderate mutation c(.4, .4)"},{"path":"/articles/optimize-nsga2.html","id":"winner","dir":"Articles","previous_headings":"Cross over and Mutation Probability","what":"Winner","title":"Fine Tuning NSGA-2","text":"winner moderate crossover mutation probability matrix small population size large generation count: Combination 15:  pop = 200; gen = 192; cprob =     0.4; mprob =    0.4","code":""},{"path":"/articles/optimize-nsga2.html","id":"influence-of-seed","dir":"Articles","previous_headings":"","what":"Influence of Seed","title":"Fine Tuning NSGA-2","text":"way get repeatable results algorithm like nsga2 set seed. illustrate , ensure solution found overly sensitive seed, ran algorithm 100 times using seeds 1 - 100. Overall, 96% tests fell within 2.5% best solutions error. total range 0.76 total nRMSE across solutions. give us confidence solution space defined adequate solving problem general way.","code":""},{"path":"/articles/optimize-nsga2.html","id":"flexibility","dir":"Articles","previous_headings":"","what":"Flexibility","title":"Fine Tuning NSGA-2","text":"Certainly, end solution different objectives might want different solutions. case following options exposed ahg_estimate: times represents number times solution run different seeds (1:n()) exposed ahg_estimate gen pop cprob mprob","code":""},{"path":"/articles/traditonal-ahg.html","id":"the-ahg-relationships","dir":"Articles","previous_headings":"","what":"The AHG relationships","title":"Traditional AHG fitting","text":"idea hydraulic geometry introduced Leopold Maddock (1953) concept ‘--station hydraulic geometry’ (AHG) provides three power laws relate water-surface width (TW), average depth (Y), average velocity (V) stream flow (Q) given river cross section: \\[ TW =  \\cdot Q^b \\] \\[ Y = c \\cdot Q^f \\] \\[ V = k \\cdot Q^m \\] set AHG relations applies within-bank flows specific cross section assumes channel characteristics change sensibly discharge. assumptions, continuity dictates water gained lost system : \\[ Q = TW·Y·V \\] therefore: \\[ b + f + m =  ·c·k = 1 \\] practice, enforcement continuity determined quality data, enforced estimation AHG relationships.","code":""},{"path":"/articles/traditonal-ahg.html","id":"traditonal-fitting-technique","dir":"Articles","previous_headings":"The AHG relationships","what":"Traditonal Fitting Technique","title":"Traditional AHG fitting","text":"AHG power laws provide elegant theory representing mass-constrained hydraulic system, data available determine relations rarely clean. cases, hydraulic data reported table(s) relating values Q values one hydraulic variables. Thus, relationships require power law relationships fit, AHG relations historically fit using OLS logarithmic transformation variables, exponential intercept provides power law coefficient, slope linear model provides exponent. Several studies highlighted potential problem using approach [38] given log transformed values back-transformed,estimates effectively medians, means estimates, resulting general low bias.","code":""},{"path":"/articles/traditonal-ahg.html","id":"example","dir":"Articles","previous_headings":"The AHG relationships","what":"Example:","title":"Traditional AHG fitting","text":"","code":"data = nwis  fit = lm(log(data$Y) ~ log(data$Q))    (coef = exp(fit$coefficients[1])) #> (Intercept)  #>   0.2004177  (exp  = fit$coefficients[2]) #> log(data$Q)  #>   0.4797009"},{"path":"/articles/traditonal-ahg.html","id":"full-fits","dir":"Articles","previous_headings":"The AHG relationships > Example:","what":"Full Fits","title":"Traditional AHG fitting","text":"","code":"ols = function(X, Y, name = NA){   fit = lm(log(Y) ~ log(X))   data.frame(coef = exp(fit$coefficients[1]),              exp  = fit$coefficients[2],              name = name,              row.names = NULL) }  (x = bind_rows(         ols(data$Q, data$Y, \"Y\"),         ols(data$Q, data$TW, \"TW\"),         ols(data$Q, data$V, \"V\"))) #>         coef       exp name #> 1  0.2004177 0.4797009    Y #> 2 23.0100349 0.1104173   TW #> 3  0.2155711 0.4093273    V"},{"path":"/articles/traditonal-ahg.html","id":"continuity-check","dir":"Articles","previous_headings":"The AHG relationships > Example:","what":"Continuity check","title":"Traditional AHG fitting","text":"","code":"sum(x$exp)  #> [1] 0.9994455 prod(x$coef) #> [1] 0.9941314"},{"path":"/articles/traditonal-ahg.html","id":"system-error","dir":"Articles","previous_headings":"The AHG relationships > Example:","what":"System Error","title":"Traditional AHG fitting","text":"","code":"data = data %>%    mutate(Yp  = x$coef[1] * (Q ^ x$exp[1]),          TWp = x$coef[2] * (Q ^ x$exp[2]),          Vp  = x$coef[3] * (Q ^ x$exp[3]))           err = data.frame(   Ye  = nrmse(data$Y, data$Yp),   TWe = nrmse(data$TW, data$TWp),   Ve  = nrmse(data$V, data$Vp) ) %>%    mutate(tot_error = Ye + TWe + Ve, type = \"OLS\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Johnson. Author, maintainer. Arash Modaresi Rad. Contributor. . Funder. . Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson M (2023). AHGestimation: R package Computing robust, mass preserving Hydraulic Geometries Rating Curves. R package version 0.2, https://github.com/mikejohnson51/AHGestimation.","code":"@Manual{,   title = {AHGestimation: An R package for Computing robust, mass preserving Hydraulic Geometries and Rating Curves},   author = {Mike Johnson},   year = {2023},   note = {R package version 0.2},   url = {https://github.com/mikejohnson51/AHGestimation}, }"},{"path":"/index.html","id":"ahgestimation","dir":"","previous_headings":"","what":"Computing robust, mass preserving hydraulic geometries and rating curves","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"Citation: Johnson, J.M. (2022) AHGestimation: Tools Estimating Physically-Based, Computationally Efficient Feature Based Hydraulic Geometry Rating Curves. Using data USGS manual measurement (Johnson, 2018), can illustrate utilities package. Overall package provides 4 capabilities: Single Relation fits Full hydraulic system fits Data preprocessing Derivation cross sections additional hydraulic traits","code":""},{"path":"/index.html","id":"base-data","dir":"","previous_headings":"","what":"Base data","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"","code":"library(AHGestimation) data = AHGestimation::nwis"},{"path":"/index.html","id":"single-relationship-fits","dir":"","previous_headings":"","what":"Single Relationship fits","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"use AHGestimation package fit Q-Y relationship using OLS NLS models:  Overall NLS model provides better fit (albeit small) measured nRMSE pBais.","code":"(sf = ahg_estimate(df = select(data, Q, Y), allowance = .05)) #>   type       exp      coef nrmse    pb method #> 1    Y 0.5185496 0.1871979  8.35 -0.18    nls #> 2    Y 0.4797009 0.2004177  8.58 -6.19    ols"},{"path":"/index.html","id":"full-hydraulic-fits","dir":"","previous_headings":"","what":"Full Hydraulic fits","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"data regarding three hydraulic states (V,TW,Y) can ensure solutions found physically valid (meets continuity constraint Q = Y x V x TW). mode OLS NLS models fit, continuity met, Evolutionary Approach implemented. produces three unique fits three variables (27 total combinations). crossed identify best performing relationships meet continuity prescribed allowance: Overall combination OLS NLS fit able provide error minimizing solution:  example see NLS able provide better fits OLS neither NLS OLS able provide physically valid solutions (viable). nsga2 approach able provide physically valid solution, error almost 10% higher OLS/NLS methods. However combined approach NLS, OLS, nsga2 able provide physically valid result 0.03% error seen best performing NLS method. ** done using raw, unrefined data! **","code":"(x = ahg_estimate(data, allowance = .05)) #>   V_method TW_method Y_method viable tot_error   V_error  TW_error   Y_error #> 1    nsga2       nls    nsga2   TRUE 0.8363382 0.2415419 0.1708646 0.4239317 #> 2    nsga2     nsga2    nsga2   TRUE 0.8363637 0.2415419 0.1708902 0.4239317 #> 3      ols       ols      ols   TRUE 0.8686964 0.2641997 0.1715093 0.4329873 #> 4      nls       nls      nls  FALSE 0.8336534 0.2412345 0.1708646 0.4215543 #>      V_coef  TW_coef    Y_coef     V_exp    TW_exp     Y_exp condition #> 1 0.2803454 23.30572 0.1577947 0.3329645 0.1111103 0.5570045 bestValid #> 2 0.2803454 23.31637 0.1577947 0.3329645 0.1100569 0.5570045     nsga2 #> 3 0.2155711 23.01003 0.2004177 0.4093273 0.1104173 0.4797009       ols #> 4 0.2886315 23.30572 0.1871979 0.3273010 0.1111103 0.5185496       nls"},{"path":"/index.html","id":"data-filtering","dir":"","previous_headings":"","what":"Data Filtering","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"Due volatility river systems deviations measurement techniques accuracy hydraulic data often noisy. ahg_estimation tool intended reduce noise produce mass-conserving hydraulic fit, also possible filter data prior fitting. range data filtering options provided documented data-filtering vignette example provided : data effectively filtered see NLS can provide error minimizing, valid solution system quite different full data fit:","code":"(xf = data %>%    # Keep the most recent 10 year   date_filter(year = 10, keep_max = TRUE) %>%    # Keep data within 3 Median absolute deviations (log residuals)   mad_filter() %>%    # Keep data that respects the Q = vA criteria w/in allowance   qva_filter() %>%    ahg_estimate()) #>   V_method TW_method Y_method viable tot_error   V_error  TW_error    Y_error #> 1      nls       nls      nls   TRUE 0.3868315 0.1737420 0.1235461 0.08954336 #> 2      nls       nls      nls   TRUE 0.3868315 0.1737420 0.1235461 0.08954336 #> 3      ols       ols      ols   TRUE 0.4869776 0.2216127 0.1255148 0.13985007 #>      V_coef  TW_coef    Y_coef     V_exp    TW_exp     Y_exp condition #> 1 0.2938667 17.98606 0.1934940 0.3009787 0.1874598 0.5098970 bestValid #> 2 0.2938667 17.98606 0.1934940 0.3009787 0.1874598 0.5098970       nls #> 3 0.2204190 18.53150 0.2448765 0.3941493 0.1733737 0.4322574       ols"},{"path":"/index.html","id":"hydraulic-estimation","dir":"","previous_headings":"","what":"Hydraulic Estimation","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"Lastly, range functions added extend AHG parameters cross section hydraulics geometry:","code":"filter_data = data %>%    date_filter(10, keep_max = TRUE) %>%    nls_filter(allowance = .5)   ahg_fit = ahg_estimate(filter_data)[1,]  (shape = compute_hydraulic_params(ahg_fit)) #>          r         p        d        R        bd        fd        md #> 1 2.749318 0.6103574 5.427385 1.363727 0.1842508 0.5065641 0.3091851  cs = cross_section(r = shape$r,                      TW = max(filter_data$TW),                     Ymax = max(filter_data$Y))  glimpse(cs) #> Rows: 50 #> Columns: 4 #> $ ind <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,… #> $ x   <dbl> 0.000000, 1.040816, 2.081633, 3.122449, 4.163265, 5.204082, 6.2448… #> $ Y   <dbl> 3.5656665613, 3.1871221498, 2.8351885546, 2.5090304653, 2.20780341… #> $ A   <dbl> 1.318953e+02, 1.130112e+02, 9.618829e+01, 8.127753e+01, 6.813466e+…"},{"path":"/index.html","id":"history","dir":"","previous_headings":"","what":"History","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"development package began graduate school project friends UC Santa Barbara UMass Amherst following 2017 NOAA OWP Summer Institute clear evidence channel shape may limiting factor National Water Model Performance. since evolved provide open source utility robust large scale data synthesis evaluation. Funding National Science Foundation (Grants 1937099, 2033607) provided time draft preprint apply early version software Continental Flood Inundation Mapping (CFIM) synthetic rating curve dataset. Funding National Oceanic Atmospheric Administration’s Office Water Prediction supported addition data filtering hydraulic estimation, improved documentation, code hardening. grateful involved.","code":""},{"path":"/reference/ahg_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Properly estimate AHG values — ahg_estimate","title":"Properly estimate AHG values — ahg_estimate","text":"Properly estimate AHG values","code":""},{"path":"/reference/ahg_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Properly estimate AHG values — ahg_estimate","text":"","code":"ahg_estimate(   df,   allowance = 0.05,   gen = 192,   pop = 200,   cprob = 0.4,   mprob = 0.4,   times = 1,   scale = 1.5,   verbose = FALSE )"},{"path":"/reference/ahg_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Properly estimate AHG values — ahg_estimate","text":"df hydraulic data.frame allowance allowed deviation continuity gen Number generations breed. pop Size population cprob Crossover probability mprob Mutation probability times many times (seeds) nsga2 run scale scale factor applied data pre NSGA-2 fitting verbose messages emitted?","code":""},{"path":"/reference/ahg_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Properly estimate AHG values — ahg_estimate","text":"list","code":""},{"path":[]},{"path":"/reference/best_optimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Report best optimal — best_optimal","title":"Report best optimal — best_optimal","text":"Report best optimal","code":""},{"path":"/reference/best_optimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report best optimal — best_optimal","text":"","code":"best_optimal(best, check, verbose = TRUE)"},{"path":"/reference/best_optimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report best optimal — best_optimal","text":"best best performing method (character string) check values check verbose messages emitted","code":""},{"path":"/reference/best_optimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report best optimal — best_optimal","text":"vector","code":""},{"path":[]},{"path":"/reference/calc_ga.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate GA FHG — calc_ga","title":"Calculate GA FHG — calc_ga","text":"Calculate GA FHG","code":""},{"path":"/reference/calc_ga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate GA FHG — calc_ga","text":"","code":"calc_ga(Q, Y, V, TW, allowance = 0.05, r, type = \"nrmse\")"},{"path":"/reference/calc_ga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate GA FHG — calc_ga","text":"Q streamflow time series Y river depth time series V river velocity time series TW river top width time series allowance allowable deviation continuity r rrr type metric evaluate","code":""},{"path":"/reference/calc_ga.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate GA FHG — calc_ga","text":"data.frame","code":""},{"path":"/reference/calc_ga_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate GA FHG — calc_ga_2","title":"Calculate GA FHG — calc_ga_2","text":"Calculate GA FHG","code":""},{"path":"/reference/calc_ga_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate GA FHG — calc_ga_2","text":"","code":"calc_ga_2(Q, Y, V, TW, allowance = 0.05, r)"},{"path":"/reference/calc_ga_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate GA FHG — calc_ga_2","text":"Q streamflow time series Y river depth time series V river velocity time series TW river top width time series allowance allowable deviation continuity r rrr","code":""},{"path":"/reference/calc_ga_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate GA FHG — calc_ga_2","text":"data.frame","code":""},{"path":"/reference/calc_nsga.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate NSGA2 AHG — calc_nsga","title":"Calculate NSGA2 AHG — calc_nsga","text":"Calculate NSGA2 AHG","code":""},{"path":"/reference/calc_nsga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate NSGA2 AHG — calc_nsga","text":"","code":"calc_nsga(   df,   allowance = 0.05,   r,   scale = 2,   gen = 96,   pop = 500,   cprob = 0.8,   mprob = 0.05,   times = 1 )"},{"path":"/reference/calc_nsga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate NSGA2 AHG — calc_nsga","text":"df hydraulic data.frame allowance allowable deviation continuity r fit list scale scale factor applied data pre NSGA-2 fitting gen Number generations breed. pop Size population cprob Crossover probability mprob Mutation probability times many times (seeds) nsga2 run","code":""},{"path":"/reference/calc_nsga.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate NSGA2 AHG — calc_nsga","text":"data.frame","code":""},{"path":[]},{"path":"/reference/compute_ahg.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate AHG relationships — compute_ahg","title":"Approximate AHG relationships — compute_ahg","text":"Approximate AHG relationships using OLS NLS methods","code":""},{"path":"/reference/compute_ahg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate AHG relationships — compute_ahg","text":"","code":"compute_ahg(Q, P, type = \"relation\")"},{"path":"/reference/compute_ahg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate AHG relationships — compute_ahg","text":"Q stream flow time series P corresponding time series second hydraulic variable type relationship tested","code":""},{"path":"/reference/compute_ahg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate AHG relationships — compute_ahg","text":"data.frame","code":""},{"path":[]},{"path":"/reference/compute_fhg.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate FHG relationships — compute_fhg","title":"Approximate FHG relationships — compute_fhg","text":"Approximate FHG relationships using OLS NLS methods","code":""},{"path":"/reference/compute_fhg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate FHG relationships — compute_fhg","text":"","code":"compute_ahg(Q, P, type = \"relation\")"},{"path":"/reference/compute_fhg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate FHG relationships — compute_fhg","text":"Q stream flow time series P corresponding time series second hydraulic variable type relationship tested","code":""},{"path":"/reference/compute_fhg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate FHG relationships — compute_fhg","text":"data.frame","code":""},{"path":[]},{"path":"/reference/compute_hydraulic_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate channel coeffiecent — compute_hydraulic_params","title":"Approximate channel coeffiecent — compute_hydraulic_params","text":"Approximate hydraulic values AHG fit","code":""},{"path":"/reference/compute_hydraulic_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate channel coeffiecent — compute_hydraulic_params","text":"","code":"compute_hydraulic_params(fit)"},{"path":"/reference/compute_hydraulic_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate channel coeffiecent — compute_hydraulic_params","text":"fit output ahg_estimate","code":""},{"path":"/reference/compute_hydraulic_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate channel coeffiecent — compute_hydraulic_params","text":"numeric","code":""},{"path":[]},{"path":"/reference/compute_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate Roughness — compute_n","title":"Approximate Roughness — compute_n","text":"Approximate median roughness using Manning Equation","code":""},{"path":"/reference/compute_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate Roughness — compute_n","text":"","code":"compute_n(df, S = 0.02)"},{"path":"/reference/compute_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate Roughness — compute_n","text":"df data.frame least Y V. S reach scale longitudinal slope (m/m). Default mean nhdplusV2","code":""},{"path":"/reference/compute_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate Roughness — compute_n","text":"numeric","code":""},{"path":[]},{"path":"/reference/compute_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate channel coeffiecent — compute_r","title":"Approximate channel coeffiecent — compute_r","text":"Approximate Dingman R coeffiecent FHG fit","code":""},{"path":"/reference/compute_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate channel coeffiecent — compute_r","text":"","code":"compute_r(fit)"},{"path":"/reference/compute_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate channel coeffiecent — compute_r","text":"numeric","code":""},{"path":[]},{"path":"/reference/compute_r_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate channel coeffiecent — compute_r_p","title":"Approximate channel coeffiecent — compute_r_p","text":"Approximate Dingman R coeffiecent FHG fit","code":""},{"path":"/reference/compute_r_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate channel coeffiecent — compute_r_p","text":"","code":"compute_r_p(fit)"},{"path":"/reference/compute_r_p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate channel coeffiecent — compute_r_p","text":"numeric","code":""},{"path":[]},{"path":"/reference/cross_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate channel shape — cross_section","title":"Approximate channel shape — cross_section","text":"Get list points x axis cross section max depth produce depth values points based channel shape","code":""},{"path":"/reference/cross_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate channel shape — cross_section","text":"","code":"cross_section(r, TW = 30, Ymax = 2)"},{"path":"/reference/cross_section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate channel shape — cross_section","text":"r corresponding Dingman's r coefficient TW width channel bankfull Ymax maximum depth channel bankfull","code":""},{"path":"/reference/cross_section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate channel shape — cross_section","text":"depth values every 1m along cross section","code":""},{"path":[]},{"path":"/reference/date_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements filtering by date — date_filter","title":"Implements filtering by date — date_filter","text":"Data filtered beyond specified year threshold (e.g. 5 years old). relative date based newest  observation data set. Optionally, maximum flow (Q) record can retained.","code":""},{"path":"/reference/date_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements filtering by date — date_filter","text":"","code":"date_filter(df, years, keep_max = FALSE)"},{"path":"/reference/date_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements filtering by date — date_filter","text":"df data.frame least date Q field. years number allowed history keep_max largest flow record kept, even older \"years\"","code":""},{"path":"/reference/date_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements filtering by date — date_filter","text":"data.frame","code":""},{"path":[]},{"path":"/reference/fhg_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Properly estimate FHG values — fhg_estimate","title":"Properly estimate FHG values — fhg_estimate","text":"Properly estimate FHG values","code":""},{"path":"/reference/fhg_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Properly estimate FHG values — fhg_estimate","text":"","code":"ahg_estimate(   df,   allowance = 0.05,   gen = 192,   pop = 200,   cprob = 0.4,   mprob = 0.4,   times = 1,   scale = 1.5,   verbose = FALSE )"},{"path":"/reference/fhg_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Properly estimate FHG values — fhg_estimate","text":"df hydraulic data.frame allowance allowed deviation continuity gen Number generations breed. pop Size population cprob Crossover probability mprob Mutation probability times many times (seeds) nsga2 run scale scale factor applied data pre NSGA-2 fitting verbose messages emitted?","code":""},{"path":"/reference/fhg_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Properly estimate FHG values — fhg_estimate","text":"list","code":""},{"path":[]},{"path":"/reference/mad_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements filtering by median absolute deviation — mad_filter","title":"Implements filtering by median absolute deviation — mad_filter","text":"iterative outlier detection procedure run based linear regression residuals.  Values log-transformed TW, V, Y residuals falling outside specified median absolute deviation (MAD) envelope excluded.  Regression coefficients recalculated outlier detection procedure reapplied outliers detected. method  identified HyG","code":""},{"path":"/reference/mad_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements filtering by median absolute deviation — mad_filter","text":"","code":"mad_filter(df, envelope = 3)"},{"path":"/reference/mad_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements filtering by median absolute deviation — mad_filter","text":"df data.frame least Q one AHG field (Y. TW, V). envelope MAD envelope","code":""},{"path":"/reference/mad_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements filtering by median absolute deviation — mad_filter","text":"data.frame","code":""},{"path":[]},{"path":"/reference/mismash.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute all combos! — mismash","title":"Compute all combos! — mismash","text":"Compute combos!","code":""},{"path":"/reference/mismash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute all combos! — mismash","text":"","code":"mismash(v, V, TW, Y, Q, r, allowance)"},{"path":"/reference/mismash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute all combos! — mismash","text":"v values V Velocity time series TW Top width time series Y Depth time series Q Discharge time series r rrr TODO allowance Allowable deviation continuity","code":""},{"path":"/reference/mismash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute all combos! — mismash","text":"list","code":""},{"path":[]},{"path":"/reference/nls_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements NLS filtering — nls_filter","title":"Implements NLS filtering — nls_filter","text":"NLS fit provides best relation relation fit. provided relationship, NLS fit computed used  estimate predicted V,TW,Y given Q. actual value outside specified allowance removed.","code":""},{"path":"/reference/nls_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements NLS filtering — nls_filter","text":"","code":"nls_filter(df, allowance = 0.5)"},{"path":"/reference/nls_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements NLS filtering — nls_filter","text":"df data.frame least Q one AHG field (Y. TW, V). allowance much deviation observed allowed (default = .5)","code":""},{"path":"/reference/nls_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements NLS filtering — nls_filter","text":"data.frame","code":""},{"path":[]},{"path":"/reference/nrmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized Root Mean Square Error — nrmse","title":"Normalized Root Mean Square Error — nrmse","text":"Normalized root mean square error (NRMSE) sim obs, treatment missing values","code":""},{"path":"/reference/nrmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized Root Mean Square Error — nrmse","text":"","code":"nrmse(sim, obs)"},{"path":"/reference/nrmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalized Root Mean Square Error — nrmse","text":"sim numeric vector simulated values obs numeric vector observed values","code":""},{"path":"/reference/nrmse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalized Root Mean Square Error — nrmse","text":"numeric","code":""},{"path":[]},{"path":"/reference/nwis.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample gage data\nManual measurements made at NWIS site 01096500 — nwis","title":"Sample gage data\nManual measurements made at NWIS site 01096500 — nwis","text":"Sample gage data Manual measurements made NWIS site 01096500","code":""},{"path":"/reference/nwis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample gage data\nManual measurements made at NWIS site 01096500 — nwis","text":"","code":"nwis"},{"path":"/reference/nwis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample gage data\nManual measurements made at NWIS site 01096500 — nwis","text":"data frame 245 rows 6 columns: siteID NWIS ID date date measurement Q Steamflow Y Depth V Velocity TW Top width","code":""},{"path":"/reference/pbias.html","id":null,"dir":"Reference","previous_headings":"","what":"Percent Bias — pbias","title":"Percent Bias — pbias","text":"Percent Bias sim obs, treatment missing values.","code":""},{"path":"/reference/pbias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percent Bias — pbias","text":"","code":"pbias(sim, obs)"},{"path":"/reference/pbias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percent Bias — pbias","text":"sim numeric vector simulated values obs numeric vector observed values","code":""},{"path":"/reference/pbias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percent Bias — pbias","text":"numeric","code":""},{"path":[]},{"path":"/reference/qva_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements filtering by continuity — qva_filter","title":"Implements filtering by continuity — qva_filter","text":"function tests measured Q outside expected range based product  measured velocity, top-width, depth (e.g. Q≠vA)","code":""},{"path":"/reference/qva_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements filtering by continuity — qva_filter","text":"","code":"qva_filter(df, allowance = 0.05)"},{"path":"/reference/qva_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements filtering by continuity — qva_filter","text":"df data.frame Q, Y, TW, V field. allowance much deviation equality allowed (default = .05)","code":""},{"path":"/reference/qva_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements filtering by continuity — qva_filter","text":"data.frame","code":""},{"path":[]},{"path":"/reference/significance_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements significance check — significance_check","title":"Implements significance check — significance_check","text":"relationship supplied log transformed variables computed.  p-value less supplied p-value error message emitted.","code":""},{"path":"/reference/significance_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements significance check — significance_check","text":"","code":"significance_check(df, pvalue = 0.05)"},{"path":"/reference/significance_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements significance check — significance_check","text":"df data.frame least Q one AHG field (Y. TW, V). pvalue Significant p-value (default = .05)","code":""},{"path":"/reference/significance_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements significance check — significance_check","text":"data.frame","code":""},{"path":[]}]
